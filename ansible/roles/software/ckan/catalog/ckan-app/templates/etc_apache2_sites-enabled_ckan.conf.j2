<VirtualHost 0.0.0.0:80>
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301,NE]

    ErrorLog {{ catalog_ckan_error_log }}
    CustomLog {{ catalog_ckan_access_log }} combined
</VirtualHost>

<VirtualHost 0.0.0.0:443>
  SSLEngine on

  ServerName ckan
  Redirect 404 /

  ErrorLog {{ catalog_ckan_error_log }}
  CustomLog {{ catalog_ckan_access_log }} combined
</VirtualHost>

<VirtualHost 0.0.0.0:443>
  SSLEngine on

  ServerName {{ catalog_ckan_apache_server_name }}
  ServerAlias {{ catalog_ckan_apache_server_alias | join(' ') }} {{ ansible_fqdn }} localhost {{ ansible_default_ipv4.address | default('') }}

  # CSW endpoints provided by pycsw
  # full CSW, all metadata
  ProxyPass /csw-all http://localhost:8001
  # default CSW, collection level metadata
  ProxyPass /csw http://localhost:8000

  {% if ckan_uses_gunicorn %}
    # gunicorn configuration
    ProxyPass / http://localhost:5000/
    ProxyPassReverse / http://localhost:5000/
    ProxyPreserveHost On
    RequestHeader set X-Forwarded-Proto https
  {% else %}
    WSGIScriptAlias / /etc/ckan/apache.wsgi

    # Pass authorization info on (needed for rest api).
    WSGIPassAuthorization On

    # Deploy as a daemon (avoids conflicts between CKAN instances).
    WSGIDaemonProcess ckan display-name=ckan processes={{ catalog_ckan_wsgi_processes }} threads=15
    WSGIProcessGroup ckan
  {% endif %}

    <Directory /etc/ckan>
      Options All
      AllowOverride All
      Require all granted
    </Directory>

    ErrorLog {{ catalog_ckan_error_log }}
    CustomLog {{ catalog_ckan_access_log }} combined

    # fix Cross-Frame Scripting (XFS) vulnerability
    Header set X-Frame-Options "SAMEORIGIN"

    Header set X-XSS-Protection "1; mode=block"
    Header set X-Content-Type-Options "nosniff"

    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Methods "POST, PUT, GET, DELETE, OPTIONS"
    Header set Access-Control-Allow-Headers "X-CKAN-API-KEY, Authorization, Content-Type"

    Header set Referrer-Policy "origin"

    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"

    # Header set Content-Security-Policy "default-src 'self'"

    RewriteEngine On

{% if catalog_ckan_readwrite_configuration == 'writeonly' %}
    {# Allow login, redirect any unauthed requests to the readonly site #}
    RewriteCond %{REQUEST_URI}     !^/api/action/status_show
    RewriteCond %{REQUEST_URI}     !^/user/(login|logged_in|_logout|logged_out|logged_out_redirect)
    RewriteCond %{REQUEST_URI}     !^/login_generic
    RewriteCond %{REQUEST_URI}     !^/_tracking
    RewriteCond %{HTTP_REFERER}    !{{saml2_idp_entry}} [NC]
    RewriteCond %{HTTP_COOKIE}     !auth_tkt
    RewriteRule ^(.*)$ {{ url_readonly }}$1 [R,L]
{% elif catalog_ckan_readwrite_configuration == 'readonly' %}
    RewriteRule   "^(/en)?/user/login"  "{{ url_writable }}/user/login" [R,L]
    RewriteRule   "^(/en)?/user/_logout"  "{{ url_writable }}/user/_logout"  [R,L]
    RewriteRule   "^(/en)?/user/logged_in"  "{{ url_writable }}/user/logged_in"  [R,L]
    RewriteRule   "^(/en)?/login_generic"  "{{ url_writable }}/login_generic"  [R,L]
    RewriteRule   "^/_tracking$" "{{ url_writable }}/_tracking" [R=307,L]
{% endif %}

    RewriteRule ^/api/rest/dataset$ api/action/package_search [R]
    RewriteRule ^/api/1/rest/dataset$ api/3/action/package_search [R]
    RewriteRule ^/api/2/rest/dataset$ api/3/action/package_search [R]

    RewriteRule ^/api/action/package_list$ api/action/package_search [R]
    RewriteRule ^/api/3/action/package_list$ api/3/action/package_search [R]

    RewriteRule ^/api/action/current_package_list_with_resources$ api/action/package_search [R]
    RewriteRule ^/api/3/action/current_package_list_with_resources$ api/3/action/package_search [R]

    # TODO fix https://github.com/GSA/datagov-deploy/issues/2664
    RewriteRule ^/api/3/action/resource_search$ api/action/package_search [R]
    RewriteRule ^/api/action/resource_search$ api/action/package_search [R]
</VirtualHost>
