---
- include: build-pkgs.yml
  vars:
    pkg:
      - {
          name: "ckanext-s3filestore",
          repo: "https://github.com/GSA/ckanext-s3filestore",
          requirements: "requirements.txt"
        }
  tags: ['s3filestore']

- name: add s3filestore to production.ini plugins
  replace:
    dest: /etc/ckan/production.ini
    regexp: '^(ckan.plugins(?!.*\bs3filestore\b).*)$'
    replace: '\1 s3filestore'
  notify: restart apache2
  tags: ['s3filestore']

- name: copy datajson export map
  copy:
    src: "{{ virtualenv }}/src/ckanext-datajson/ckanext/datajson/export_map/export.inventory.map.sample.json"
    dest: "{{ virtualenv }}/src/ckanext-datajson/ckanext/datajson/export_map/export.map.json"
    remote_src: true
  notify: restart apache2

- name: "Datapusher json content-type temp fix (content-type: application/json does not work now)"
  replace:
    dest: /usr/lib/datapusher/lib/python2.7/site-packages/ckanserviceprovider/web.py
    regexp: 'application/json'
    replace: 'application/x-www-form-urlencoded'
  notify: restart apache2

- name: "Remove compiled web.pyc"
  file:
    path: /usr/lib/datapusher/lib/python2.7/site-packages/ckanserviceprovider/web.pyc
    state: absent
  notify: restart apache2

- name: install beaker cache cleanup script
  template: src=beaker-cache-cleanup.sh.j2 dest=/usr/local/bin/beaker-cache-cleanup.sh owner=root group=root mode=0755

- name: install pgpass file for beaker-cache-cleanup
  copy:
    content: |
      {{ inventory_ckan_db_host }}:5432:{{ inventory_db_name }}:{{ inventory_db_user }}:{{ inventory_db_pass }}
    # TODO should be an app user variable
    dest: /root/.pgpass
    mode: "0600"
    owner: root
    group: root

# need this manual start to pass molecule test?
- name: start supervisor
  service:
    name: supervisor
    state: started

- name: copy supervisord config
  copy:
    src: beaker-cache-cleanup.conf
    dest: /etc/supervisor/conf.d/beaker-cache-cleanup.conf
    mode: "0644"
    owner: root
    group: root

- name: add beaker-cache-cleanup program
  supervisorctl:
    name: beaker-cache-cleanup
    state: present

- name: schedule beaker-cache-cleanup cron
  cron:
    name: "clean beaker cache in db"
    cron_file: ckan
    job: supervisorctl start beaker-cache-cleanup > /dev/null
    minute: "5"
    hour: "11"
    user: root
    disabled: "{{ not crons_enabled }}"
    state: present
  tags: ['cron']
