---
- include: build-pkgs.yml
  vars:
    build_pkg_name: "ckanext-s3filestore"
    build_pkg_repo: "https://github.com/okfn/ckanext-s3filestore"
    build_pkg_requirements: "requirements.txt"
  tags: ['s3filestore']

- name: copy datajson export map
  copy:
    src: "{{ virtualenv }}/src/ckanext-datajson/ckanext/datajson/export_map/export.inventory.map.sample.json"
    dest: "{{ virtualenv }}/src/ckanext-datajson/ckanext/datajson/export_map/export.map.json"
    owner: root
    group: www-data
    mode: '0644'
    remote_src: true
  notify: restart apache2

- name: install inventory db init script
  copy: src=inventory-db-init.py dest=/usr/local/bin/inventory-db-init.py owner=root group=root mode=0755

- name: Update CKAN translation files
  command: "{{ project_source_new_code_path }}/bin/paster --plugin=ckan trans js -c /etc/ckan/production.ini"
  when:
    - inventory_next
    - db_is_setup
  become: true

- name: install beaker cache cleanup script
  template: src=beaker-cache-cleanup.sh.j2 dest=/usr/local/bin/beaker-cache-cleanup.sh owner=root group=root mode=0755

- name: install pgpass file for beaker-cache-cleanup
  copy:
    content: |
      {{ inventory_ckan_db_host }}:5432:{{ inventory_db_name }}:{{ inventory_db_user }}:{{ inventory_db_pass }}
    # TODO should be an app user variable
    dest: /root/.pgpass
    mode: "0600"
    owner: root
    group: root

# need this manual start to pass molecule test?
- name: start supervisor
  service:
    name: supervisor
    state: started

- name: copy supervisord config
  copy:
    src: beaker-cache-cleanup.conf
    dest: /etc/supervisor/conf.d/beaker-cache-cleanup.conf
    mode: "0644"
    owner: root
    group: root

- name: add beaker-cache-cleanup program
  supervisorctl:
    name: beaker-cache-cleanup
    state: present

- name: schedule beaker-cache-cleanup cron
  cron:
    name: "clean beaker cache in db"
    cron_file: ckan
    job: supervisorctl start beaker-cache-cleanup > /dev/null
    minute: "5"
    hour: "11"
    user: root
    disabled: "{{ not crons_enabled }}"
    state: present
  tags: ['cron']
