#!/bin/bash
# bin/ansible-inventory-diff <commitish>
#
# This is an experimental script to diff the Ansible inventory between the
# current working directory and another commit. You can use this to see exactly
# how your code changes will effect the Ansible inventory (ansible-inventory
# --list). This makes it very easy to spot if an unintended change was introduced.
#
# Example usage:
#
# Show the diff from any work in progress changes compared to master:
#
#     $ bin/ansible-inventory-diff origin/master
#
# Show the diff from any work in progress changes compared to the default branch:
#
#     $ bin/ansible-inventory-diff


set -o errexit
set -o pipefail

# Use the configured difftool or fallback to vimdiff
difftool=$(git config --get diff.tool)

function do_checkout () {
  local directory commitish project_root
  directory=$1
  commitish=$2
  project_root=$(git rev-parse --show-toplevel)

  git archive "$commitish" | tar x -C "$directory"
}

function do_ansible_inventory () {
  local directory inventory
  inventory=$1
  directory=$2

  cd "$directory/ansible"
  ansible-inventory --inventory "inventories/$inventory" --list
}

function full_inventory () {
  local directory
  directory=$1

  # Use jq for pretty formatting and key sorting for JSON
  jq '.' <<EOF
{
  "production": $(do_ansible_inventory production $directory),
  "staging": $(do_ansible_inventory staging $directory),
  "mgmt": $(do_ansible_inventory mgmt $directory),
  "sandbox": $(do_ansible_inventory sandbox $directory)
}
EOF
}


default_branch=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
oldcommitish=${1:-$default_branch}

olddir=$(mktemp -d)
do_checkout "$olddir" "$oldcommitish"

${difftool:-vimdiff} <(full_inventory "$olddir") <(full_inventory "$(pwd)")
rm -rf "$olddir"